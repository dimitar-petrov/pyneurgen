--- /home/dpetrov/develop/python/pyneurgen/pyneurgen/neuralnet.py	2017-04-04 13:17:23.329717680 +0300
+++ neuralnet.py	2017-01-21 18:17:49.623518000 +0200
@@ -385,7 +385,7 @@
         """
 
         i = start_position
-        if end_position > len(self._allinputs):
+        if end_position > len(self._allinputs) - 1:
             raise ValueError(
                 "end_position %s is past end of ._allinputs, %s" % (
                     end_position, len(self._allinputs)))
@@ -629,7 +629,7 @@
 
         return mse
 
-    def process_sample(self, inputs, targets=None, learn=False):
+    def process_sample(self, inputs, targets, learn=False):
         """
         Accepts inputs and targets, then forward and back propagations.  A
         comparison is then made of the generated output with the target values.
@@ -653,12 +653,6 @@
 
         self._copy_levels()
 
-        outputs = []
-        for node in self.output_layer.nodes:
-            outputs.append(node._value)
-
-        return outputs
-
     def _feed_forward(self):
         """
         This function starts with the first hidden layer and
